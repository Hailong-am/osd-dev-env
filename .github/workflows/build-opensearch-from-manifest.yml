name: Build OpenSearch from manifest

on:
  workflow_dispatch:
    inputs:
      deployment_name:
        description: 'The name of the deployment'
        required: true
      version:
        description: 'The version of OpenSearch'
        required: true

jobs:
  build-opensearch:
    runs-on: ubuntu-22.04
    env:
      PYTHON_VERSION: 3.9
      JDK_VERSION: 17
      ARCH: 'x64'
      PLATFORM: 'linux'
      AWS_REGION: 'us-east-1'
      ECR_REGISTRY_ALIAS: 'r9h9r7k4'
      ECR_REPOSITORY: 'opensearch-dev'
      DEPLOYMENT_NAME: ${{ github.event.inputs.deployment_name }}
      SNAPSHOT: ${{ endsWith(github.event.inputs.version, 'SNAPSHOT') && 'true' || 'false' }}
      VERSION: ${{ github.event.inputs.version }}
    container:
      image: public.ecr.aws/opensearchstaging/ci-runner:ci-runner-centos7-opensearch-build-v3
      volumes:
        - ${{ github.workspace }}:/var/workspace
      options: --workdir /var/workspace
    steps:
      - uses: actions/checkout@v3
        with:
          path: opensearch-dev-env
      - uses: actions/checkout@v3
        with:
          repository: opensearch-project/opensearch-build
          path: opensearch-build
      - name: Set Up JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_VERSION }}
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install Dependencies
        run: |
          ls -l
          pwd
          # python -m pip install --upgrade pipenv wheel
          # sudo apt-get install libopenblas-dev gfortran -y

          # sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          # sudo chmod a+x /usr/local/bin/yq
          # /usr/local/bin/yq --version
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public
      - name: Build and assemble
        run: |
          ls -l
          pwd
          cd opensearch-build
          if [ -f ../opensearch-dev-env/deployments/${{ env.DEPLOYMENT_NAME }}/manifests/opensearch.yml ]; then
            ./build.sh ../opensearch-dev-env/deployments/${{ env.DEPLOYMENT_NAME }}/manifests/opensearch.yml --architecture ${{ env.ARCH }} --platform ${{ env.PLATFORM }} ${{ env.SNAPSHOT == 'true' && '--snapshot' }}
            ./assemble.sh tar/builds/opensearch/manifest.yml
          fi
      - name: Build and push docker image
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: ${{ env.ECR_REGISTRY_ALIAS }}
          REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.run_id }}
        run: |
          artifact_name=opensearch-${{env.VERSION}}-${{ env.PLATFORM }}-${{ env.ARCH }}.tar.gz
          tarball=$(realpath opensearch-build/tar/dist/opensearch/$artifact_name)
          cd ./opensearch-build/docker/release
          ./build-image-single-arch.sh -v $IMAGE_TAG -p opensearch -a ${{ env.ARCH }} -f ${{ github.workspace }}/opensearch-dev-env/docker/opensearch.dockerfile -t $tarball
          docker images
          docker tag opensearchproject/opensearch:$IMAGE_TAG $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          echo "Pushed docker image: $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG"

          cd ${{ github.workspace }}/opensearch-dev-env
          yq -i '.global.dockerRegistry = "${{ env.REGISTRY }}"' ./deployments/${{ env.DEPLOYMENT_NAME }}/opensearch.yaml
          yq -i '.image.repository = "${{ env.REGISTRY_ALIAS }}/${{ env.REPOSITORY }}"' ./deployments/${{ env.DEPLOYMENT_NAME }}/opensearch.yaml
          yq -i '.image.tag = "${{ env.IMAGE_TAG }}"' ./deployments/${{ env.DEPLOYMENT_NAME }}/opensearch.yaml
      - name: Create pull request
        uses: peter-evans/create-pull-request@v5
        with:
          path: opensearch-dev-env
          commit-message: update opensearch image
          title: Update opensearch image
          branch: create-pull-request/update-opensearch-image
          signoff: true
          delete-branch: true
          add-paths: |
            deployments/${{ env.DEPLOYMENT_NAME }}/opensearch.yaml
